name: C/C++ CI

on: [push]

defaults:
  run:
    shell: bash

env:
  VCPKG_GIT_COMMIT_ID: f79c681fc2b42f9c7c5024459b5a867d56ac6123

jobs:
  ci-linux:
    # name: ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        MH_STUFF_COMPILE_LIBRARY: [true, false]
        # compiler: [clang++-11, clang++-10, g++-10, clang++-9, g++-9, clang++-8, g++-8, clang++-7]
        compiler:
          - exe: clang++-11
            deps: libc++-11-dev libc++abi-11-dev
          - exe: clang++-10
            deps: libc++-10-dev libc++abi-10-dev
          - exe: clang++-9
            deps: libc++-9-dev libc++abi-9-dev
          - exe: clang++-8
            deps: libc++-8-dev libc++abi-8-dev
          - exe: clang++-7
            deps: libc++-7-dev libc++abi-7-dev
          - exe: g++-10
            deps: ""
          - exe: g++-9
            deps: ""
          - exe: g++-8
            deps: ""

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: lukka/run-vcpkg@v7
      with:
        setupOnly: true
        vcpkgGitCommitId: ${{ env.VCPKG_GIT_COMMIT_ID }}

    - name: Add repos
      run: |
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 15CF4D18AF4F7421
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal main" | sudo tee /etc/apt/sources.list.d/llvm.list
        echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main" | sudo tee -a /etc/apt/sources.list.d/llvm.list
        echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main" | sudo tee -a /etc/apt/sources.list.d/llvm.list
        sudo apt update

    - name: Install compiler
      run: |
        # sudo rm -rf /var/lib/apt/lists/*
        # sudo apt clean
        sudo apt install ${{ matrix.compiler.exe }} ${{ matrix.compiler.deps }} ninja-build -y
        sudo pip3 install gcovr

    # - name: Run tests
    #   working-directory: ./test
    #   run: make -j`grep -c ^processor /proc/cpuinfo` ${{ matrix.compiler }}_test_output.txt

    - name: Run tests
      env:
        CXX: ${{ matrix.compiler.exe }}
      run: |
        mkdir build
        cd build

        cmake --version

        cmake -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" \
          -DMH_STUFF_COMPILE_LIBRARY=${{ matrix.MH_STUFF_COMPILE_LIBRARY }} \
          ../

        cmake --build .

        ctest --version
        ctest --output-on-failure

        gcovr --version
        gcovr --root "../" --exclude ".*/catch.hpp" --exclude ".*/test_compile_file/.*" --exclude ".*/test/.*" --sort-percentage --html-details "results_${{ matrix.compiler.exe }}.html" .

    - name: Save test results
      if: ${{ matrix.MH_STUFF_COMPILE_LIBRARY }}
      uses: actions/upload-artifact@v2
      with:
        name: gcovr_results_${{ matrix.compiler.exe }}
        path: build/results*.html



  ci-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        MH_STUFF_COMPILE_LIBRARY: [true, false]

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: lukka/run-vcpkg@v7
      with:
        setupOnly: true
        vcpkgGitCommitId: ${{ env.VCPKG_GIT_COMMIT_ID }}

    - uses: seanmiddleditch/gha-setup-ninja@v3
    - name: Setup compiler paths
      uses: ilammy/msvc-dev-cmd@v1.5.0

    - name: Run tests
      run: |
        mkdir build
        cd build

        cmake -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" \
          -DMH_STUFF_COMPILE_LIBRARY=${{ matrix.MH_STUFF_COMPILE_LIBRARY }} \
          ../

        cmake --build .
        ctest --output-on-failure
